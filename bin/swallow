#!/usr/bin/env bash
# dwm swallowing for bspwm

main(){
	get_defaults
	setup_hide_before
	listen
}

get_defaults(){
	: "${SWALLOW_TERMINALS}"
	[[ "$_" ]] && terms="$_" || terms="st|urxvt|kitty"
	: "${SWALLOW_APPLICATIONS}"
	[[ "$_" ]] && apps="$_" || get_from_xdg
}

setup_hide_before(){
	IFS='|' for app in "$apps"; do
		bspc rule -a $app --flag hidden=on
	done
}

listen(){
	while read -r -a node_event; do
		define_elements "${node_event[@]}"
		case_event $event
	done < <(bspc subscribe node_add node_remove)
}

define_elements(){
	event=$1
	desktop=$3
	last_node=$4
	new_node=$5
}

case_event(){
	case $1 in
		node_add) swallow ;;
		node_remove) spit ;;
	esac
}

swallow() {
	query_desktop || return 1
	query_swallower || return 1
	query_swallowing || return 1
	hide_node
}

query_desktop(){
	node_desktop=$(bspc query -D -n "$new_node")
	[[ "$desktop" = "$node_desktop" ]] || false
}

query_swallower(){
	application=$(probe "$new_node")
	[[ "${application,,}" =~ ${apps,,} ]] || false
}

query_swallowing(){
	terminal=$(probe "$last_node")
	[[ "${terminal,,}" =~ ${terms,,} ]] || false
}

probe(){
	IFS=$'\n' read -rd '' -a xprop < <(xprop -id "$1")
	for line in "${xprop[@]}"; do
		[[ $line =~ WM_CLASS ]] || continue
		: ${line%\"*}; printf '%s' "${_##\"}"
	done
}

hide_node(){
	bspc node "$last_node" --flag hidden=on
	bspc node "$new_node" --flag hidden=off
	swallowed+=("$new_node $last_node")
}

spit() {
	query_spitting || return 1
	query_spitting_desktop || pull_node_desktop
	show_node
}

query_spitting(){
	for ((spit=0;spit<${#swallowed[@]};spit++)); do
		[[ "${swallowed[spit]}" =~ ^$last_node ]] || continue
		set ${swallowed[spit]}; node_spit="$2"
		return 0
	done
	false
}

query_spitting_desktop(){
	spitting_desktop=$(bspc query -D -n "$node_spit")
	[[ "$desktop" = "$spitting_desktop" ]] || false
}

pull_node_desktop(){
	bspc node "$node_spit" -d "$desktop"
}

show_node(){
	bspc node "$node_spit" --flag hidden=off
	bspc node "$node_spit" -f
	unset 'swallowed[spit]'
}

get_from_xdg(){
	for app in "image/*" "video/*" "application/pdf"; do
		: "$(xdg-mime query default $app)"
		apps+="${_%.desktop}|"
	done
	apps="${apps%|}"
}

survive_restart(){
	trap 'write_survival || rm $survival' EXIT
	survival="${TMPDIR:-/tmp}/swallowed"
	read_survival
}

write_survival(){
	[[ ${swallowed[@]} ]] || return 1
	printf '%s\n' "${swallowed[@]}" > "$survival"
}

read_survival(){
	[[ -a "$survival" ]] || return 1
	IFS=$'\n' read -rd '' -a swallowed < "$survival"
}

survive_restart
main
